name: üõ†Ô∏è Build All

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }}-${{ github.ref_name }}"
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: üêß Linux
            identifier: linux-release
            runner: ubuntu-20.04
            platform: linux
            arch: x86_64
            precision: single

          - name: üêß Linux (Double Precision)
            identifier: linux-double-release
            runner: ubuntu-20.04
            platform: linux
            arch: x86_64
            precision: double

          - name: ü™ü Windows
            identifier: windows-release
            runner: windows-latest
            platform: windows
            arch: x86_64
            precision: single

          - name: üçé MacOS
            identifier: macos-release
            runner: macos-latest
            platform: macos
            precision: single

          - name: ü§ñ Android (arm64)
            identifier: android-arm64
            runner: ubuntu-20.04
            platform: arm64-v8a
            arch: arm64-v8a
            precision: single

          - name: ü§ñ Android (arm32)
            identifier: android-arm32
            runner: ubuntu-20.04
            platform: armeabi-v7a
            arch: armeabi-v7a
            precision: single

    steps:

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Linux Dependencies
        if: startsWith(matrix.identifier, 'linux-')
        uses: ./.github/actions/linux-deps

      - name: Setup Windows Dependencies
        if: startsWith(matrix.identifier, 'windows-')
        uses: ./.github/actions/windows-deps

      - name: Setup MacOS Dependencies
        if: startsWith(matrix.identifier, 'macos-')
        uses: ./.github/actions/macos-deps

      - name: Setup Android Dependencies
        if: startsWith(matrix.identifier, 'android-')
        uses: ./.github/actions/android-deps

      - name: Setup Base Dependencies
        uses: ./.github/actions/base-deps

      - name: Install ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ccache-${{ matrix.identifier }}

      - name: Compile Godot (Double Precision)
        if: ${{ matrix.precision == 'double' }}
        shell: sh
        working-directory: ./extern/godot-engine
        run: |
          scons precision=double
          ./godot.linuxbsd.editor.double.x86_64 --dump-gdextension-interface
          ./godot.linuxbsd.editor.double.x86_64 --dump-extension-api

      - name: Prepare double precision
        if: ${{ matrix.precision == 'double' }}
        shell: sh
        run: |
          cp 'extern/godot-engine/bin/extension_api.json' 'extern/godot-cpp/gdextension/extension_api.json'
          cp 'extern/godot-engine/bin/gdextension_interface.h' 'extern/godot-cpp/gdextension/gdextension_interface.h'

      - name: Generate Build Files (${{ matrix.identifier }})
        shell: sh
        run: |
          cmake -B '${{ github.workspace }}/.out-${{ matrix.identifier }}' --preset ${{ matrix.platform }} -S '${{ github.workspace }}' -DFLOAT_PRECISION=${{ matrix.precision }}

      - name: Build Orchestrator (${{ matrix.identifier }})
        shell: sh
        run: |
          cmake --build '${{ github.workspace }}/.out-${{ matrix.identifier }}' --target orchestrator -j 18

      - name: Prepare addon files
        shell: bash
        run: |
          cp '${{ github.workspace }}/AUTHORS.md' '${{ github.workspace }}/project/addons/orchestrator/'
          cp '${{ github.workspace }}/CHANGELOG.md' '${{ github.workspace }}/project/addons/orchestrator/'
          cp '${{ github.workspace }}/README.md' '${{ github.workspace }}/project/addons/orchestrator/'
          cp '${{ github.workspace }}/LICENSE' '${{ github.workspace }}/project/addons/orchestrator/'

      - name: Upload artifact (Demo)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-demo-${{ matrix.identifier }}
          retention-days: 1
          path: |
            ${{ github.workspace }}/project/

      - name: Upload artifact (Plugin)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-plugin-${{ matrix.identifier }}
          retention-days: 1
          path: |
            ${{ github.workspace }}/project
            !${{ github.workspace }}/project/addons/orchestrator/*debug*
            !${{ github.workspace }}/project/scenes
            !${{ github.workspace }}/project/icon.svg
            !${{ github.workspace }}/project/project.godot

  publish:
    needs: build
    runs-on: ubuntu-latest
    name: Combine Artifacts
    steps:
      - name: Download Plugin Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ github.event.repository.name }}-plugin-*
          merge-multiple: true

      - name: Upload Plugin Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-plugin
          retention-days: 7
          path: |
            ${{ github.workspace }}

      - name: Delete Incremental Plugin Artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            godot-orchestrator-plugin-*